ruby:
  provide(:title, 'Quote Search')

- content_for :nav do
  = render "nav"

.d-flex.flex-row.align-items-center.justify-content-between.mt-3
  h1.font-varland Quote Search
  - if policy(:vcms).part_search? && @count_filters > 0
    = link_to "#{fa "share"} Search Parts w/ Same Filters".html_safe, vcms_production_part_search_path(filters: { customer: params[:filters][:customer], process: params[:filters][:process], part: params[:filters][:part], sub: params[:filters][:sub], on_or_after: params[:filters][:on_or_after], on_or_before: params[:filters][:on_or_before], search: params[:filters][:search] }), class: ["btn", "btn-primary", "btn-sm"], target: "_blank"

= simple_form_for(:filters, url: vcms_sales_quote_search_url, method: "GET", html: {class: ["vp-gray-form", "my-3", "all-auto-submit"]}) do |f|

  .row.loading-icon.d-none
    .col-12.text-center.mt-3.fs-1 == fa "spinner", spin: true

  .form-fields
    .row
      .col-12.col-md-3.mt-3
        - if @count_filters == 0 || (@quotes.length == 0)
          = f.input :customer, required: false, label: "Customer Code:", input_html: { value: params[:filters].blank? ? "" : params[:filters][:customer] }
        - else
          = f.input :customer, collection: @data[:filters][:customer_code], selected: params[:filters].blank? ? "" : params[:filters][:customer].upcase, required: false, label: "Customer Code:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md-3.mt-3
        = f.input :process, collection: @data[:filters][:process_code], selected: params[:filters].blank? ? "" : params[:filters][:process].upcase, required: false, label: "Process Code:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md-5.mt-3
        - if @count_filters == 0 || (@quotes.length == 0)
          = f.input :part, required: false, label: "Part ID:", input_html: { value: params[:filters].blank? ? "" : params[:filters][:part] }
        - else
          = f.input :part, collection: @data[:filters][:part], selected: params[:filters].blank? ? "" : params[:filters][:part].upcase, required: false, label: "Part ID:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md-1.mt-3
        - if @count_filters == 0 || (@quotes.length == 0)
          = f.input :sub, required: false, label: "Sub ID:", input_html: { value: params[:filters].blank? ? "" : params[:filters][:sub] }
        - else
          = f.input :sub, collection: @data[:filters][:sub], selected: params[:filters].blank? ? "" : params[:filters][:sub], required: false, label: "Sub ID:", include_blank: true, input_html: { class: "form-select" }
    .row
      .col-12.col-md-3.mt-3
        = f.input :quote, collection: @data[:filters][:quote], selected: params[:filters].blank? ? "" : params[:filters][:quote].upcase, required: false, label: "Quote #:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md-3.mt-3
        = f.input :on_or_after, required: false, label: "Quoted On or After:", as: :date, html5: true, input_html: { style: "margin: 0 !important;", value: params[:filters].blank? ? "" : params[:filters][:on_or_after] }
      .col-12.col-md-3.mt-3
        = f.input :on_or_before, required: false, label: "Quoted On or Before:", as: :date, html5: true, input_html: { style: "margin: 0 !important;", value: params[:filters].blank? ? "" : params[:filters][:on_or_before] }
      .col-12.col-md-3.mt-3
        = f.input :current, collection: ["Current Only", "Historical Only"], selected: params[:filters].blank? ? "" : params[:filters][:current], required: false, label: "Current/Historical Quotes:", include_blank: true, input_html: { class: "form-select" }
    .row
      .col-12.col-md.mt-3
        = f.input :search, required: false, label: "Search:", hint: "Searches part ID, part name, part description, process specification, quote remarks, and part application.", input_html: { value: params[:filters].blank? ? "" : params[:filters][:search] }


- if @quotes.present?

  .d-flex.flex-row.align-items-center.justify-content-center
    = render partial: "shared/pagination", locals: { label: "Quotes" }

  .row
    .col-12.my-3
      .shadow-sm.rounded
        .d-none.d-md-flex.flex-row.align-items-center.justify-content-start.bg-dark.text-white.fw-700.rounded-top.border-dark
          .p-2.w-20 Part Spec
          .p-2.w-20 Name / Description
          .p-2.w-20 Process
          .p-2.w-40 Remarks / Application
        .quote-search-quotes
          = render partial: "quote_search_quote", collection: @quotes, as: :quote

  .d-flex.flex-row.align-items-center.justify-content-center
    = render partial: "shared/pagination", locals: { label: "Quotes" }