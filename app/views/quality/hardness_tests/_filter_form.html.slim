= simple_form_for(:filters, method: "GET", html: {class: ["vp-gray-form", "my-3", "all-auto-submit"]}) do |f|

  .row.loading-icon.d-none
    .col-12.text-center.mt-3.fs-1 == fa "spinner", spin: true

  .form-fields
    .row
      .col-12.col-md.mt-3 = f.input :with_shop_order, collection: AS400::ShopOrder.where(id: @all_hardness_tests.pluck(:shop_order_id)).pluck(:number).sort, selected: params[:filters].blank? ? "" : params[:filters][:with_shop_order], required: false, label: "Shop Order:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :with_load, collection: @all_hardness_tests.pluck(:load).reject(&:nil?).uniq.sort, selected: params[:filters].blank? ? "" : params[:filters][:with_load], required: false, label: "Load #:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :with_is_rework, collection: [["Yes", true], ["No", false]], selected: params[:filters].blank? ? "" : params[:filters][:with_is_rework], required: false, label: "Rework:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :with_customer, collection: AS400::ShopOrder.where(id: @all_hardness_tests.pluck(:shop_order_id)).pluck(:customer_code).uniq.sort, selected: params[:filters].blank? ? "" : params[:filters][:with_customer], required: false, label: "Customer Code:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :with_process_code, collection: AS400::ShopOrder.where(id: @all_hardness_tests.pluck(:shop_order_id)).pluck(:process_code).uniq.sort, selected: params[:filters].blank? ? "" : params[:filters][:with_process_code], required: false, label: "Process Code:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :with_part, collection: AS400::ShopOrder.where(id: @all_hardness_tests.pluck(:shop_order_id)).pluck(:part).uniq.sort, selected: params[:filters].blank? ? "" : params[:filters][:with_part], required: false, label: "Part ID:", include_blank: true, input_html: { class: "form-select" }
    .row
      .col-12.col-md.mt-3 = f.input :with_test_type, collection: @all_hardness_tests.pluck(:test_type).uniq.sort, selected: params[:filters].blank? ? "" : params[:filters][:with_test_type], required: false, label: "Test Type:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :with_average_gte, required: false, label: "Average Above:", input_html: { value: params[:filters].blank? ? nil : params[:filters][:with_average_gte] }
      .col-12.col-md.mt-3 = f.input :with_average_lte, required: false, label: "Average Below:", input_html: { value: params[:filters].blank? ? nil : params[:filters][:with_average_lte] }
      .col-12.col-md.mt-3 = f.input :on_or_after, as: :date, html5: true, required: false, label: "Start Date:", input_html: { value: params[:filters].blank? ? nil : params[:filters][:on_or_after] }
      .col-12.col-md.mt-3 = f.input :on_or_before, as: :date, html5: true, required: false, label: "End Date:", input_html: { value: params[:filters].blank? ? nil : params[:filters][:on_or_before] }
      .col-12.col-md.mt-3 = f.input :sorted_by, collection: [["Shop Order", "shop_order"], ["Part Spec", "part_spec"], ["Oldest First", "oldest"], ["Newest First", "newest"]], selected: params[:filters].blank? ? "" : params[:filters][:sorted_by], required: false, label: "Sort By:", include_blank: true, input_html: { class: "form-select" }