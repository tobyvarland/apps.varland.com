- if @hardness_tests.length == 0

  .mt-3 No tests found.

- else

  .table-responsive.my-3
    table.table.table-striped.table-hover
      thead.table-dark
        th.text-center.w-1 Date 
        th Shop Order
        th.text-center.w-1 Load #
        th Tested By
        th Test Type
        th.text-center.w-1 Average
        th.text-center.w-1 Î” from Raw 
        th.text-center.w-1 Piece #1
        th.text-center.w-1 Piece #2
        th.text-center.w-1 Piece #3
        th.text-center.w-1 Piece #4
        th.text-center.w-1 Piece #5
        - if policy(Quality::HardnessTest).destroy?
          th.text-center.w-1 Options
      tbody
        - @hardness_tests.each do |hardness_test|
          tr
            td.text-center = hardness_test.tested_on.strftime("%m/%d/%Y")
            td
              = hardness_test.shop_order.number
              br
              small.text-uncolor = hardness_test.shop_order.part_spec.join " / "
            td.text-center = hardness_test.load_with_rework
            td = hardness_test.user.name_and_number  
            td = hardness_test.test_type 
            td.text-center
              = number_with_precision hardness_test.average, precision: 2  
              - if hardness_test.raw_test.present?
                br
                small.text-uncolor = number_with_precision hardness_test.raw_test.average, precision: 2  
            td.text-center = number_with_precision hardness_test.change_from_raw, precision: 2
            td.text-center
              = number_with_precision hardness_test.piece_1, precision: 2
              - if hardness_test.raw_test.present?
                br
                small.text-uncolor = number_with_precision hardness_test.raw_test.piece_1, precision: 2
            td.text-center
              = number_with_precision hardness_test.piece_2, precision: 2
              - if hardness_test.raw_test.present?
                br
                small.text-uncolor = number_with_precision hardness_test.raw_test.piece_2, precision: 2
            td.text-center
              = number_with_precision hardness_test.piece_3, precision: 2
              - if hardness_test.raw_test.present?
                br
                small.text-uncolor = number_with_precision hardness_test.raw_test.piece_3, precision: 2
            td.text-center
              = number_with_precision hardness_test.piece_4, precision: 2
              - if hardness_test.raw_test.present?
                br
                small.text-uncolor = number_with_precision hardness_test.raw_test.piece_4, precision: 2
            td.text-center
              = number_with_precision hardness_test.piece_5, precision: 2
              - if hardness_test.raw_test.present?
                br
                small.text-uncolor = number_with_precision hardness_test.raw_test.piece_5, precision: 2
            - if policy(hardness_test).destroy?
              - if hardness_test.kept?
                td.text-center = link_to "#{fa 'trash-alt'} Delete".html_safe, hardness_test, method: :delete, data: { confirm: "Are you sure you want to delete this hardness test?\n\nIT can restore it later if necessary." }, class: ["btn", "btn-sm", "btn-danger"]
              - else
                td.text-center = link_to "#{fa 'trash-restore-alt'} Restore".html_safe, restore_quality_hardness_test_path(hardness_test), method: :post, data: { confirm: "Are you sure you want to restore this hardness test?" }, class: ["btn", "btn-sm", "btn-warning"]