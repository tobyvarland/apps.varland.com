= simple_form_for(result, html: {class: ["vp-gray-form"]}) do |f|

  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  = f.association :calibration_type, as: :hidden
  = f.association :user, as: :hidden
  = f.input :type, as: :hidden, input_html: { value: type }

  .row
    .col-12.col-md-4.mt-3
      = f.association :device, collection: @calibration_type.devices, label: "Device:", required: true, input_html: { class: "form-select" }
    .col-12.col-md-4.mt-3
      = f.association :reason_code, label: "Reason:", required: true, input_html: { class: "form-select" }
    .col-12.col-md-4.mt-3
      = f.input :result_on, label: "Date:", required: true, as: :date, html5: true, input_html: { style: "margin: 0 !important;" }

  = render partial: "calibrations/results/#{type.demodulize.underscore}_fields", locals: { f: f }

  .form-actions
    div
      = f.button :button, "#{fa "check"} Save Calibration".html_safe, class: ["btn-primary", "btn-sm"]

javascript:
  $(function() {
    var $dropdown = $("#calibrations_result_device_id");
    var options = $dropdown.find("option");
    if (options.length == 2) {
      var $option = $(options[1]);
      $dropdown.val($option.val());
    }
  });