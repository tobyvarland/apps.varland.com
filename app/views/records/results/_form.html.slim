= simple_form_for(@result, as: :records_result, url: records_result_path(@result), html: {class: ["vp-gray-form", "my-3"]}) do |f|

  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .row
    .col-12.col-md.mt-3
      = f.input :record_type_name, label: "Record Type:", as: :string, required: true, disabled: true, input_html: { value: @result.record_type.name }
    .col-12.col-md.mt-3
      = f.input :device_name, label: "Device:", as: :string, required: true, disabled: true, input_html: { value: @result.device.name }
    .col-12.col-md.mt-3
      = f.association :reason_code, label: "Reason:", required: true, input_html: { class: "form-select" }
    .col-12.col-md.mt-3
      = f.input :result_on, label: "Date:", required: true, as: :date, html5: true, input_html: { style: "margin: 0 !important;" }

  - unless @result.record_type.instructions.blank?
    .mt-3.border.rounded.shadow-sm.p-3.small.card-body == @markdown.render(@result.record_type.instructions)

  - if lookup_context.exists?("#{@result.record_type.record_subclass.demodulize.underscore}_fields", ["records/results"], true)
    = render partial: "records/results/#{@result.record_type.record_subclass.demodulize.underscore}_fields", locals: { f: f, result: @result }

  .row
    .col-12.mt-3
      = f.input :comments, label: "#{fa "markdown", type: "fab"} Comments:".html_safe, required: false

  .form-actions
    div
      = link_to "#{fa "times"} Cancel".html_safe, records_results_url, class: ["btn", "btn-light", "btn-sm", "me-3"], tabindex: -1
      = f.button :button, "#{fa "check"} Save Record".html_safe, class: ["btn-primary", "btn-sm"]