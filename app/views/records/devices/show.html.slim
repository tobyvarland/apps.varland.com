ruby:
  provide(:title, "Device Details: #{@device.name}")

- content_for :nav do
  = render "records/nav"

.d-flex.flex-row.align-items-center.justify-content-between.mt-3
  h1.font-varland = "Device Details: #{@device.name}"
  div
    = link_to "#{fa "list-alt"} All Devices".html_safe, records_devices_url, class: ["btn", "btn-sm", "btn-primary"]
    - if policy(:records).admin?
      = link_to "#{fa "edit"} Edit".html_safe, edit_records_device_path(@device), class: ["btn", "btn-sm", "btn-primary", "ms-1"]
      = link_to "#{fa "trash-alt"} Delete".html_safe, @device, method: :delete, data: { confirm: 'Are you sure?' }, class: ["btn", "btn-sm", "btn-danger", "ms-1"]

.row

  .col-12.col-md-3

    ruby:
      details = []
      details << {label: "Location", value: @device.location} unless @device.location.blank?
      details << {label: "In Service", value: @device.in_service_on.strftime("%m/%d/%Y")}
      details << {label: "Retired", value: @device.retired_on.strftime("%m/%d/%Y")} unless @device.retired_on.blank?
      details << {label: "# Record Types Assigned", value: @device.assignments.length} if @device.retired_on.blank?
    = card_list "Device Details", details

  .col-12.col-md-9

    - if @device.retired_on.blank?

      - if policy(:records).data_entry?
        - @device.assignments.by_type.each do |obj|
          .card.bg-light.mt-3
            h6.card-header.d-flex.flex-row.align-items-center.justify-content-between
              div = "Enter New #{obj.record_type.record_subclass.demodulize.titleize}"
              - unless obj.record_type.url.blank?
                = link_to "#{fa "link"} Instructions".html_safe, obj.record_type.url, target: "_blank", class: ["btn", "btn-sm", "btn-dark"]
            .card-body.p-0
              = render partial: "records/results/device_form", locals: { result: @device.results.build(user: current_user, result_on: Date.current, record_type: obj.record_type), type: obj.record_type.record_subclass }

      .card.bg-light.mt-3
        h6.card-header Current Status
        table.table.mb-0.small.table-hover.table-striped.table-borderless
          thead
            tr
              th.px-3 Type
              th.px-3.text-center Last Record
              th.px-3.text-center Next Record Due
              th.px-3.text-center Days Until Due
          tbody
            - @device.assignments.by_due_date.each do |obj|
              tr *{class: "#{"past-due" if obj.next_result_due_in_days && obj.next_result_due_in_days < 0}"}
                td.px-3 = link_to obj.record_type.name, obj.record_type
                td.px-3.text-center
                  - if obj.last_result_on.blank?
                    span.fst-italic Never
                  - else
                    = obj.last_result_on.strftime "%m/%d/%y"
                - if obj.next_result_due_on.blank?
                  td.text-center.fst-italic.text-uncolor &ndash;
                  td &nbsp;
                - else
                  td.text-center = obj.next_result_due_on.strftime "%m/%d/%y"
                  td.text-center = record_days_badge obj.next_result_due_in_days

    - @device.assignments.by_type.each do |obj|
      .card.bg-light.mt-3
        h6.card-header.d-flex.flex-row.align-items-center.justify-content-between
          = "Full History"
          - if @device.assignments.length > 1
            = link_to obj.record_type.name, obj.record_type
        = render partial: "records/results/table_for_device", locals: { results: @device.results.for_record_type(obj.record_type_id).reverse_chronological, type: obj.record_type.record_subclass }