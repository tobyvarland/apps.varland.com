ruby:
  provide(:title, "Device Details: #{@device.name}")

- content_for :nav do
  = render "records/nav"

.d-flex.flex-row.align-items-center.justify-content-between.mt-3
  h1.font-varland = "Device Details: #{@device.name}"
  div
    = link_to "#{fa "list-alt"} All Devices".html_safe, records_devices_url, class: ["btn", "btn-sm", "btn-primary"]
    - if policy(:records).admin?
      = link_to "#{fa "edit"} Edit".html_safe, edit_records_device_path(@device), class: ["btn", "btn-sm", "btn-primary", "ms-1"]
      = link_to "#{fa "trash-alt"} Delete".html_safe, @device, method: :delete, data: { confirm: 'Are you sure?' }, class: ["btn", "btn-sm", "btn-danger", "ms-1"]

.row

  .col-12.col-md-3

    ruby:
      details = []
      details << {label: "Location", value: @device.location} unless @device.location.blank?
      details << {label: "In Service", value: @device.in_service_on.strftime("%m/%d/%Y")}
      details << {label: "Retired", value: @device.retired_on.strftime("%m/%d/%Y")} unless @device.retired_on.blank?
      details << {label: "# Record Types Assigned", value: @device.assignments.length} if @device.retired_on.blank?
    = card_list "Device Details", details

  .col-12.col-md-9

    - if @device.retired_on.blank?

      - if policy(:records).data_entry?
        .card.bg-light.mt-3
          h6.card-header.d-flex.flex-row.align-items-center.justify-content-between.px-2
            .d-flex.flex-row.align-items-center.justify-content-start
              div.text-nowrap New Record:
              - if @device.assignments.length > 1
                select.form-select.w-auto#data-entry-form-selector.ms-3
                  - @device.assignments.by_due_date.each do |obj|
                    option *{value: "#{obj.record_type.slug}"} = obj.record_type.name
              - else
                div.ms-1 = @device.assignments.by_type.first.record_type.name
            div
              - @device.assignments.by_type.each do |obj|
                - unless obj.record_type.url.blank?  || obj.record_type.has_youtube_video?
                  = link_to "#{fa "link"} Instructions".html_safe, obj.record_type.url, target: "_blank", class: ["btn", "btn-sm", "btn-dark", "record-instructions"], id: "#{obj.record_type.slug}-instructions"
          .card-body.p-0
            - @device.assignments.by_type.each do |obj|
              .record-entry-form *{id: "#{obj.record_type.slug}-form"}
                = render partial: "records/results/device_form", locals: { result: @device.results.build(user: current_user, result_on: Date.current, record_type: obj.record_type), type: obj.record_type.record_subclass }

      .card.bg-light.mt-3
        h6.card-header.px-2 Current Status
        table.table.mb-0.small.table-hover.table-striped.table-borderless
          thead
            tr
              th Type
              th.text-center Last Record
              th.text-center Next Record Due
              th.text-center Days Until Due
          tbody
            - @device.assignments.by_due_date.each do |obj|
              tr *{class: "#{"past-due" if obj.next_result_due_in_days && obj.next_result_due_in_days < 0}"}
                td
                  = link_to obj.record_type.name, obj.record_type
                  - unless obj.record_type.frequency.blank?
                    span.small.text-uncolor.ms-1 = "(every #{pluralize obj.record_type.frequency, "day"})"
                td.text-center
                  - if obj.last_result_on.blank?
                    span.fst-italic Never
                  - else
                    = obj.last_result_on.strftime "%m/%d/%y"
                - if obj.next_result_due_on.blank?
                  td.text-center.fst-italic.text-uncolor &ndash;
                  td &nbsp;
                - else
                  td.text-center = obj.next_result_due_on.strftime "%m/%d/%y"
                  td.text-center = record_days_badge obj.next_result_due_in_days

    .card.bg-light.mt-3
      h6.card-header.d-flex.flex-row.align-items-center.justify-content-start.px-2
        div.text-nowrap Full History:
        - if @device.assignments.length > 1
          select.form-select.w-auto#history-selector.ms-3
            - @device.assignments.by_type.each do |obj|
              option *{value: "#{obj.record_type.slug}"} = obj.record_type.name
      - @device.assignments.by_type.each do |obj|
        .history-table *{id: "#{obj.record_type.slug}-history"}
          = render partial: "records/results/table_for_device", locals: { results: @device.results.for_record_type(obj.record_type_id).reverse_chronological, type: obj.record_type.record_subclass }

javascript:

  $(function() {

    $recordEntryForms = $(".record-entry-form");
    if ($recordEntryForms.length > 1) $recordEntryForms.addClass("d-none");
    $instructionsButtons = $(".record-instructions");
    if ($recordEntryForms.length > 1) $instructionsButtons.addClass("d-none");
    $historyTables = $(".history-table");
    if ($historyTables.length > 1) $historyTables.addClass("d-none");

    $formDropdown = $("#data-entry-form-selector");
    $("#" + $formDropdown.val() + "-form").removeClass("d-none");
    $("#" + $formDropdown.val() + "-instructions").removeClass("d-none");

    $historyDropdown = $("#history-selector");
    $("#" + $historyDropdown.val() + "-history").removeClass("d-none");

    $formDropdown.on("change", function() {
      $recordEntryForms.addClass("d-none");
      $instructionsButtons.addClass("d-none");
      $("#" + $formDropdown.val() + "-form").removeClass("d-none");
      $("#" + $formDropdown.val() + "-instructions").removeClass("d-none");
    });

    $historyDropdown.on("change", function() {
      $historyTables.addClass("d-none");
      $("#" + $historyDropdown.val() + "-history").removeClass("d-none");
    });

  });