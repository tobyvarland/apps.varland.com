ruby:
  provide(:title, 'Receiving Priority Notes')

- content_for :nav do
  = render "nav"

.d-flex.flex-row.align-items-center.justify-content-between.mt-3
  h1.font-varland Receiving Priority Notes
  - if policy(Shipping::ReceivingPriorityNote).create?
    = link_to "#{fa 'plus'} Note".html_safe, new_shipping_receiving_priority_note_path, class: ["btn", "btn-sm", "btn-primary"]

- if @shipping_receiving_priority_notes.length == 0

  p.my-3.fst-italic.text-uncolor No receiving priority notes in the system.

- else

  .table-responsive.my-3
    table.table.table-striped.table-hover
      thead.table-dark
        th.w-1 Type
        th.text-center.w-1 Date
        th.w-1 Requested By
        th.text-wrap Details
        th.text-center.w-1 Options
      tbody
        - @shipping_receiving_priority_notes.each do |note|
          tr class="#{row_class_for_receiving_note(note.request_type)}"
            td.align-top
              = receiving_note_type_badge note.request_type
            td.align-top.text-center = note.created_at.strftime("%m/%d/%y")
            td.align-top = note.requested_by_user.name_and_number
            td.align-top.text-wrap = simple_format note.request_details
            td.align-top.text-center
              - if policy(note).update?
                = simple_form_for(note) do |f|
                  = f.association :completed_by_user, as: :hidden, input_html: { value: current_user.id }
                  = f.button :button, "#{fa "check"} Mark Complete".html_safe, class: ["btn-primary", "btn-sm"], data: { confirm: "Are you sure you want to mark this item complete? This will send an email notification to #{note.requested_by_user.name}." }
              - if policy(note).destroy?
                = link_to "#{fa 'trash-alt'} Delete".html_safe, note, method: :delete, data: { confirm: "Are you sure you want to delete this note?" }, class: ["btn", "btn-sm", "btn-danger"]