= simple_form_for(:filters, method: "GET", html: {class: ["vp-gray-form", "my-3", "all-auto-submit"]}) do |f|

  = f.input :show_filters, as: :hidden, input_html: { value: params[:filters].blank? ? nil : params[:filters][:show_filters] }

  .row.loading-icon.d-none
    .col-12.text-center.mt-3.fs-1 == fa "spinner", spin: true

  .form-fields
    .row
      .col-12.col-md.mt-3 = f.input :on_or_after, as: :date, html5: true, required: false, label: "Start Date:", input_html: { value: params[:filters].blank? ? nil : params[:filters][:on_or_after] }
      .col-12.col-md.mt-3 = f.input :on_or_before, as: :date, html5: true, required: false, label: "End Date:", input_html: { value: params[:filters].blank? ? nil : params[:filters][:on_or_before] }
      .col-12.col-md.mt-3 = f.input :with_shift, collection: @all_shift_notes.pluck(:shift), selected: params[:filters].blank? ? "" : params[:filters][:with_shift], required: false, label: "Shift:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :with_department, collection: ShiftNote.department_options(limit: @all_shift_notes.pluck(:department).reject(&:blank?)), selected: params[:filters].blank? ? "" : params[:filters][:with_department], required: false, label: "Department:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :entered_by, collection: User.find(@all_shift_notes.pluck(:user_id).uniq).collect {|u| u.name_and_number}.sort, selected: params[:filters].blank? ? "" : params[:filters][:entered_by], required: false, label: "Entered By:", include_blank: true, input_html: { class: "form-select" }
    .row
      .col-12.mt-3 = f.input :with_search_term, required: false, label: "Search:", input_html: { value: params[:filters].blank? ? nil : params[:filters][:with_search_term] }
    .row
      - [[:for_it, "IT"], [:for_lab, "Lab"], [:for_maintenance, "Maintenance"], [:for_plating, "Plating"], [:for_qc, "QC"], [:for_shipping, "Shipping"]].each do |filter|
        .col-12.col-md.mt-3 = f.input filter[0], collection: [["Yes", true], ["No", false]], selected: params[:filters].blank? ? "" : params[:filters][filter[0]], required: false, label: "For #{filter[1]}:", include_blank: true, input_html: { class: "form-select" }
    .row
      .col-12.col-md.mt-3 = f.input :has_comments, collection: [["Yes", true], ["No", false]], selected: params[:filters].blank? ? "" : params[:filters][:has_comments], required: false, label: "Has Comments:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 = f.input :has_any_attachments, collection: [["Yes", true], ["No", false]], selected: params[:filters].blank? ? "" : params[:filters][:has_any_attachments], required: false, label: "Has Attachments:", include_blank: true, input_html: { class: "form-select" }
      .col-12.col-md.mt-3 &nbsp;
      .col-12.col-md.mt-3 &nbsp;
      .col-12.col-md.mt-3 &nbsp;
      .col-12.col-md.mt-3 = f.input :sorted_by, collection: [["Newest First", "newest"], ["Oldest First", "oldest"]].sort, selected: params[:filters].blank? ? "" : params[:filters][:sorted_by], required: false, label: "Sort By:", include_blank: true, input_html: { class: "form-select" }